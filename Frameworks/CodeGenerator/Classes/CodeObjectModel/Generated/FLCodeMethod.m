// 
// FLCodeMethod.m
// 
// DO NOT MODIFY!! Modifications will be overwritten.
// Generated by: Mike Fullerton @ 6/14/13 2:45 PM with PackMule (3.0.0.29)
// 
// Project: ObjectModel
// Schema: ObjectModel
// 
// Copyright 2013 (c) GreenTongue Software LLC, Mike Fullerton
// The FishLamp Framework is released under the MIT License: http://fishlamp.com/license
// 


#import "FLCodeVariable.h"
#import "FLCodeMethod.h"
#import "FLModelObject.h"
#import "FLObjectDescriber.h"
#import "FLCodeCodeSnippet.h"
#import "FLCodeLine.h"

@implementation FLCodeMethod

@synthesize code = _code;
@synthesize codeLines = _codeLines;
+ (FLCodeMethod*) codeMethod {
    return FLAutorelease([[[self class] alloc] init]);
}
@synthesize comment = _comment;
#if FL_MRC
- (void) dealloc {
    [_returnType release];
    [_parameters release];
    [_code release];
    [_comment release];
    [_codeLines release];
    [_name release];
    [super dealloc];
}
#endif
+ (void) didRegisterObjectDescriber:(FLObjectDescriber*) describer {
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"parameter" propertyClass:[FLCodeVariable class]] forContainerProperty:@"parameters"];
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"codeLine" propertyClass:[FLCodeLine class]] forContainerProperty:@"codeLines"];
}
@synthesize isPrivate = _isPrivate;
@synthesize isStatic = _isStatic;
@synthesize name = _name;
@synthesize parameters = _parameters;
@synthesize returnType = _returnType;

@end
