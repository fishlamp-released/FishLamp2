// 
// FLCodeProject.m
// 
// DO NOT MODIFY!! Modifications will be overwritten.
// Generated by: Mike Fullerton @ 6/15/13 2:56 PM with PackMule (3.0.0.29)
// 
// Project: FishLamp Code Generator
// 
// Copyright 2013 (c) GreenTongue Software LLC, Mike Fullerton
// The FishLamp Framework is released under the MIT License: http://fishlamp.com/license
// 


#import "FLCodeTypeDefinition.h"
#import "FLCodeArray.h"
#import "FLCodeProject.h"
#import "FLModelObject.h"
#import "FLObjectDescriber.h"
#import "FLCodeEnumType.h"
#import "FLCodeObject.h"
#import "FLCodeImport.h"
#import "FLCodeDefine.h"
#import "FLCodeProjectInfo.h"
#import "FLCodeGeneratorOptions.h"

@implementation FLCodeProject

FLSynthesizeLazyGetter(arrays, NSMutableArray, _arrays);
@synthesize arrays = _arrays;
+ (id) codeProject {
    return FLAutorelease([[[self class] alloc] init]);
}
@synthesize comment = _comment;
#if FL_MRC
- (void) dealloc {
    [_options release];
    [_objects release];
    [_dependencies release];
    [_arrays release];
    [_imports release];
    [_enumTypes release];
    [_typeDefinitions release];
    [_projectPath release];
    [_comment release];
    [_defines release];
    [_info release];
    [super dealloc];
}
#endif
FLSynthesizeLazyGetter(defines, NSMutableArray, _defines);
@synthesize defines = _defines;
FLSynthesizeLazyGetter(dependencies, NSMutableArray, _dependencies);
@synthesize dependencies = _dependencies;
+ (void) didRegisterObjectDescriber:(FLObjectDescriber*) describer {
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"object" propertyClass:[FLCodeObject class]] forContainerProperty:@"objects"];
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"dependency" propertyClass:[FLCodeTypeDefinition class]] forContainerProperty:@"dependencies"];
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"array" propertyClass:[FLCodeArray class]] forContainerProperty:@"arrays"];
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"import" propertyClass:[FLCodeImport class]] forContainerProperty:@"imports"];
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"enumType" propertyClass:[FLCodeEnumType class]] forContainerProperty:@"enumTypes"];
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"typeDefinition" propertyClass:[FLCodeTypeDefinition class]] forContainerProperty:@"typeDefinitions"];
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"define" propertyClass:[FLCodeDefine class]] forContainerProperty:@"defines"];
}
FLSynthesizeLazyGetter(enumTypes, NSMutableArray, _enumTypes);
@synthesize enumTypes = _enumTypes;
FLSynthesizeLazyGetter(imports, NSMutableArray, _imports);
@synthesize imports = _imports;
FLSynthesizeLazyGetter(info, FLCodeProjectInfo, _info);
@synthesize info = _info;
FLSynthesizeLazyGetter(objects, NSMutableArray, _objects);
@synthesize objects = _objects;
FLSynthesizeLazyGetter(options, FLCodeGeneratorOptions, _options);
@synthesize options = _options;
@synthesize projectPath = _projectPath;
FLSynthesizeLazyGetter(typeDefinitions, NSMutableArray, _typeDefinitions);
@synthesize typeDefinitions = _typeDefinitions;

@end
