// 
// ZFPhotoSet.m
// 
// DO NOT MODIFY!! Modifications will be overwritten.
// Generated by: Mike Fullerton @ 6/3/13 12:06 PM with PackMule (3.0.0.20)
// 
// Project: Zenfolio Web API
// Schema: ZenfolioWebApi
// 
// Copyright 2013 (c) GreenTongue Software LLC, Mike Fullerton
// The FishLamp Framework is released under the MIT License: http://fishlamp.com/license
// 


#import "ZFPhoto.h"
#import "ZFGroupElement.h"
#import "FLObjectDescriber.h"
#import "ZFPhotoSetType.h"
#import "ZFPhotoSet.h"

@implementation ZFPhotoSet

@synthesize caption = _caption;
@synthesize categories = _categories;
@synthesize createdOn = _createdOn;
#if FL_MRC
- (void) dealloc {
    [_modifiedOn release];
    [_mailboxId release];
    [_pageUrl release];
    [_keywords release];
    [_createdOn release];
    [_parentGroups release];
    [_type release];
    [_caption release];
    [_titlePhoto release];
    [_photos release];
    [_uploadUrl release];
    [_categories release];
    [_videoUploadUrl release];
    [super dealloc];
}
#endif
+ (void) didRegisterObjectDescriber:(FLObjectDescriber*) describer {
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"Keyword" propertyClass:[NSString class]] forContainerProperty:@"keywords"];
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"Id" propertyClass:[NSNumber class]] forContainerProperty:@"parentGroups"];
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"Photo" propertyClass:[ZFPhoto class]] forContainerProperty:@"photos"];
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"Category" propertyClass:[NSNumber class]] forContainerProperty:@"categories"];
}
@synthesize featuredIndex = _featuredIndex;
@synthesize imageCount = _imageCount;
@synthesize isRandomTitlePhoto = _isRandomTitlePhoto;
@synthesize keywords = _keywords;
@synthesize mailboxId = _mailboxId;
@synthesize modifiedOn = _modifiedOn;
@synthesize pageUrl = _pageUrl;
@synthesize parentGroups = _parentGroups;
@synthesize photoBytes = _photoBytes;
@synthesize photoCount = _photoCount;
@synthesize photoListCn = _photoListCn;
+ (ZFPhotoSet*) photoSet {
    return FLAutorelease([[[self class] alloc] init]);
}
@synthesize photos = _photos;
@synthesize textCn = _textCn;
@synthesize titlePhoto = _titlePhoto;
@synthesize type = _type;
- (ZFPhotoSetType) typeEnum {
    return ZFPhotoSetTypeEnumFromString(self.type);
}
- (void) setTypeEnum:(ZFPhotoSetType) value {
    self.type = ZFPhotoSetTypeStringFromEnum(value);
}
- (ZFPhotoSetTypeEnumSet*) typeEnumSet {
    return [ZFPhotoSetTypeEnumSet enumSet:self.type];;
}
- (void) setTypeEnumSet:(ZFPhotoSetTypeEnumSet*) value {
    self.type = value.concatenatedString;
}
@synthesize uploadUrl = _uploadUrl;
@synthesize videoCount = _videoCount;
@synthesize videoUploadUrl = _videoUploadUrl;
@synthesize views = _views;

@end
