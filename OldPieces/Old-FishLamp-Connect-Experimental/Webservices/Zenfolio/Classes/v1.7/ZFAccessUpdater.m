// 
// ZFAccessUpdater.m
// 
// DO NOT MODIFY!! Modifications will be overwritten.
// Generated by: Mike Fullerton @ 6/3/13 12:06 PM with PackMule (3.0.0.20)
// 
// Project: Zenfolio Web API
// Schema: ZenfolioWebApi
// 
// Copyright 2013 (c) GreenTongue Software LLC, Mike Fullerton
// The FishLamp Framework is released under the MIT License: http://fishlamp.com/license
// 


#import "ZFAccessType.h"
#import "FLModelObject.h"
#import "FLObjectDescriber.h"
#import "ZFAccessUpdater.h"
#import "ZFApiAccessMask.h"

@implementation ZFAccessUpdater

@synthesize accessMask = _accessMask;
- (ZFApiAccessMask) accessMaskEnum {
    return ZFApiAccessMaskEnumFromString(self.accessMask);
}
- (void) setAccessMaskEnum:(ZFApiAccessMask) value {
    self.accessMask = ZFApiAccessMaskStringFromEnum(value);
}
- (ZFApiAccessMaskEnumSet*) accessMaskEnumSet {
    return [ZFApiAccessMaskEnumSet enumSet:self.accessMask];;
}
- (void) setAccessMaskEnumSet:(ZFApiAccessMaskEnumSet*) value {
    self.accessMask = value.concatenatedString;
}
@synthesize accessType = _accessType;
- (ZFAccessType) accessTypeEnum {
    return ZFAccessTypeEnumFromString(self.accessType);
}
- (void) setAccessTypeEnum:(ZFAccessType) value {
    self.accessType = ZFAccessTypeStringFromEnum(value);
}
- (ZFAccessTypeEnumSet*) accessTypeEnumSet {
    return [ZFAccessTypeEnumSet enumSet:self.accessType];;
}
- (void) setAccessTypeEnumSet:(ZFAccessTypeEnumSet*) value {
    self.accessType = value.concatenatedString;
}
+ (ZFAccessUpdater*) accessUpdater {
    return FLAutorelease([[[self class] alloc] init]);
}
#if FL_MRC
- (void) dealloc {
    [_password release];
    [_passwordHint release];
    [_accessMask release];
    [_accessType release];
    [_viewers release];
    [super dealloc];
}
#endif
+ (void) didRegisterObjectDescriber:(FLObjectDescriber*) describer {
    [describer addContainerType:[FLPropertyDescriber propertyDescriber:@"Viewer" propertyClass:[NSString class]] forContainerProperty:@"viewers"];
}
@synthesize isDerived = _isDerived;
@synthesize password = _password;
@synthesize passwordHint = _passwordHint;
@synthesize viewers = _viewers;

@end
