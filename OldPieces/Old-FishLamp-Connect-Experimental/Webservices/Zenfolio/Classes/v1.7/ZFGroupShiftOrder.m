// 
// ZFGroupShiftOrder.m
// 
// DO NOT MODIFY!! Modifications will be overwritten.
// Generated by: Mike Fullerton @ 6/3/13 10:43 AM with PackMule (3.0.1.100)
// 
// Project: Zenfolio Web API
// Schema: ZenfolioWebApi
// 
// Copyright 2013 (c) GreenTongue Software LLC, Mike Fullerton
// The FishLamp Framework is released under the MIT License: http://fishlamp.com/license
// 

#import "ZFGroupShiftOrder.h"

NSString* ZFGroupShiftOrderStringFromEnum(ZFGroupShiftOrder theEnum) {
    switch(theEnum) {
        case ZFGroupShiftOrderGroupsTop:{
            return kZFGroupShiftOrderGroupsTop;
        }
        break;
        case ZFGroupShiftOrderTitleAsc:{
            return kZFGroupShiftOrderTitleAsc;
        }
        break;
        case ZFGroupShiftOrderCreatedAsc:{
            return kZFGroupShiftOrderCreatedAsc;
        }
        break;
        case ZFGroupShiftOrderModifiedDesc:{
            return kZFGroupShiftOrderModifiedDesc;
        }
        break;
        case ZFGroupShiftOrderCreatedDesc:{
            return kZFGroupShiftOrderCreatedDesc;
        }
        break;
        case ZFGroupShiftOrderTitleDesc:{
            return kZFGroupShiftOrderTitleDesc;
        }
        break;
        case ZFGroupShiftOrderGroupsBottom:{
            return kZFGroupShiftOrderGroupsBottom;
        }
        break;
        case ZFGroupShiftOrderModifiedAsc:{
            return kZFGroupShiftOrderModifiedAsc;
        }
        break;
    }
    return nil;
}

ZFGroupShiftOrder ZFGroupShiftOrderEnumFromString(NSString* theString) {
    static NSDictionary* s_enumLookup = nil;
    static dispatch_once_t s_lookupPredicate = 0;
    dispatch_once(&s_lookupPredicate, ^{
        s_enumLookup = [[NSDictionary alloc] initWithObjectsAndKeys:
            [NSNumber numberWithInteger:ZFGroupShiftOrderGroupsTop], [kZFGroupShiftOrderGroupsTop lowercaseString],
            [NSNumber numberWithInteger:ZFGroupShiftOrderTitleAsc], [kZFGroupShiftOrderTitleAsc lowercaseString],
            [NSNumber numberWithInteger:ZFGroupShiftOrderCreatedAsc], [kZFGroupShiftOrderCreatedAsc lowercaseString],
            [NSNumber numberWithInteger:ZFGroupShiftOrderModifiedDesc], [kZFGroupShiftOrderModifiedDesc lowercaseString],
            [NSNumber numberWithInteger:ZFGroupShiftOrderCreatedDesc], [kZFGroupShiftOrderCreatedDesc lowercaseString],
            [NSNumber numberWithInteger:ZFGroupShiftOrderTitleDesc], [kZFGroupShiftOrderTitleDesc lowercaseString],
            [NSNumber numberWithInteger:ZFGroupShiftOrderGroupsBottom], [kZFGroupShiftOrderGroupsBottom lowercaseString],
            [NSNumber numberWithInteger:ZFGroupShiftOrderModifiedAsc], [kZFGroupShiftOrderModifiedAsc lowercaseString],
            nil ];
    });
    NSNumber* value = [s_enumLookup objectForKey:[theString lowercaseString]];
    return value == nil ? NSNotFound : [value integerValue];
}

@implementation ZFGroupShiftOrderEnumSet
+ (id) enumSet{
    return FLAutorelease([[[self class] alloc] initWithValueLookup:(FLEnumSetEnumValueLookup*)  ZFGroupShiftOrderEnumFromString stringLookup:(FLEnumSetEnumStringLookup*) ZFGroupShiftOrderStringFromEnum]);
}
+ (id) enumSet:(NSString*) concatenatedEnumString {
    ZFGroupShiftOrderEnumSet* outObject = FLAutorelease([[[self class] alloc] initWithValueLookup:(FLEnumSetEnumValueLookup*)  ZFGroupShiftOrderEnumFromString stringLookup:(FLEnumSetEnumStringLookup*) ZFGroupShiftOrderStringFromEnum]);
    [outObject setConcatenatedString:concatenatedEnumString];
    return outObject;
}
@end
