//
//  FLObjcFileHeader.m
//  CodeGenerator
//
//  Created by Mike Fullerton on 5/11/13.
//  Copyright (c) 2013 Mike Fullerton. All rights reserved.
//

#import "FLObjcFileHeader.h"
#import "FLAppInfo.h"
#import "FLCodeCodeLicense.h"
#import "FLCodeGeneratorOptions.h"
#import "FLCodeCompany.h"
#import "FLCodeProject.h"
#import "FLObjcCodeBuilder.h"
#import "FLObjcFile.h"

@interface FLObjcFileHeader ()
@property (readwrite, strong, nonatomic) FLCodeProject* codeProject;
@end

@implementation FLObjcFileHeader

@synthesize codeProject = _codeProject;

+ (id) objcFileHeader:(FLObjcTypeIndex*) typeIndex {
    return FLAutorelease([[[self class] alloc] initWithTypeIndex:typeIndex]);
}

#if FL_MRC
- (void) dealloc {
    [_codeProject release];
    [super dealloc];
}
#endif

- (void) configureWithCodeProject:(FLCodeProject*) codeProject {
    self.codeProject = codeProject;
}

- (void) writeCodeToFile:(FLObjcFile*) file withCodeBuilder:(FLObjcCodeBuilder*) codeBuilder {


    NSDateFormatter *dateFormatter = FLAutorelease([[NSDateFormatter alloc] init]);
    [dateFormatter setDateStyle:kCFDateFormatterShortStyle];
    [dateFormatter setTimeStyle:kCFDateFormatterShortStyle];

    NSString *formattedDateString = [dateFormatter stringFromDate:[NSDate date]];

    FLObjcComment* comment = [FLObjcComment objcComment];
    [comment appendEmptyComment];
	[comment appendLineWithFormat:@"%@", file.fileName];
    [comment appendEmptyComment];
    [comment appendLine:@"DO NOT MODIFY!! Modifications will be overwritten."];
	[comment appendLineWithFormat:@"Generated by: %@ @ %@ with %@ (%@)", NSFullUserName(), formattedDateString, [FLAppInfo appName], [FLAppInfo appVersion]];
    [comment appendEmptyComment];
	[comment appendLineWithFormat:@"Project: %@", self.codeProject.projectName];
	[comment appendLineWithFormat:@"Schema: %@", self.codeProject.schemaName];
    FLCodeCompany* company = self.codeProject.organization;
    
    if(company) {
        if(FLStringIsNotEmpty(company.name)) {
            [comment appendEmptyComment];
            
            if(FLStringIsNotEmpty(company.website)) {
                [comment appendLineWithFormat:@"Organization: %@ (%@)", company.name, company.website];
            }
            NSDateComponents *components = [[NSCalendar currentCalendar] components:NSYearCalendarUnit fromDate:[NSDate date]];
            [comment appendLineWithFormat:@"Copyright %d (c) %@", components.year, company.name];
        }
        
    }
	
    FLCodeCodeLicense* codeLicense = self.codeProject.license;
    if(codeLicense) {
        if(FLStringIsNotEmpty(codeLicense.licenseName)) {
            [comment appendLineWithFormat:@"%@", codeLicense.licenseName];
        }
        if(FLStringIsNotEmpty(codeLicense.licenseShortDescription)) {
            [comment appendLineWithFormat:@"License Description: %@", codeLicense.licenseShortDescription];
        }
        if(FLStringIsNotEmpty(codeLicense.licenseTextFilePath)) {
            [comment appendLineWithFormat:@"License File: %@", codeLicense.licenseTextFilePath];
        }

    }
    [comment appendEmptyComment];
    
    [codeBuilder appendStringFormatter:comment];
    
	if(self.codeProject.generatorOptions.disabled) {
        [codeBuilder appendBlankLine];
        [codeBuilder appendPreprocessorIf:@"DISABLED"];
        [codeBuilder appendBlankLine];
	} 
    [codeBuilder appendBlankLine];
	
}

- (void) writeCodeToHeaderFile:(FLObjcFile*) file withCodeBuilder:(FLObjcCodeBuilder*) codeBuilder {
    [self writeCodeToFile:file withCodeBuilder:codeBuilder];
}

- (void) writeCodeToSourceFile:(FLObjcFile*) file withCodeBuilder:(FLObjcCodeBuilder*) codeBuilder {
    [self writeCodeToFile:file withCodeBuilder:codeBuilder];
}



@end
