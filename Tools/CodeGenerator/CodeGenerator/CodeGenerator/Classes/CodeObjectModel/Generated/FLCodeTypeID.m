// 
// FLCodeTypeID.m
// 
// DO NOT MODIFY!! Modifications will be overwritten.
// Generated by: Mike Fullerton @ 6/2/13 5:33 PM with PackMule (3.0.0.100)
// 
// Project: FishLamp Code Generator
// Schema: ObjectModel
// 
// Copyright 2013 (c) GreenTongue Software LLC, Mike Fullerton
// The FishLamp Framework is released under the MIT License: http://fishlamp.com/license
// 

#import "FLCodeTypeID.h"

NSString* FLCodeTypeIDStringFromEnum(FLCodeTypeID theEnum) {
    switch(theEnum) {
        case FLCodeTypeIDEnum:{
            return kFLCodeTypeIDEnum;
        }
        break;
        case FLCodeTypeIDObject:{
            return kFLCodeTypeIDObject;
        }
        break;
        case FLCodeTypeIDImmuteable:{
            return kFLCodeTypeIDImmuteable;
        }
        break;
        case FLCodeTypeIDValue:{
            return kFLCodeTypeIDValue;
        }
        break;
    }
    return nil;
}

FLCodeTypeID FLCodeTypeIDEnumFromString(NSString* theString) {
    static NSDictionary* s_enumLookup = nil;
    static dispatch_once_t s_lookupPredicate = 0;
    dispatch_once(&s_lookupPredicate, ^{
        s_enumLookup = [[NSDictionary alloc] initWithObjectsAndKeys:
            [NSNumber numberWithInteger:FLCodeTypeIDEnum], [kFLCodeTypeIDEnum lowercaseString],
            [NSNumber numberWithInteger:FLCodeTypeIDObject], [kFLCodeTypeIDObject lowercaseString],
            [NSNumber numberWithInteger:FLCodeTypeIDImmuteable], [kFLCodeTypeIDImmuteable lowercaseString],
            [NSNumber numberWithInteger:FLCodeTypeIDValue], [kFLCodeTypeIDValue lowercaseString],
            nil ];
    });
    NSNumber* value = [s_enumLookup objectForKey:[theString lowercaseString]];
    return value == nil ? NSNotFound : [value integerValue];
}

@implementation FLCodeTypeIDEnumSet
+ (id) enumSet{
    return FLAutorelease([[[self class] alloc] initWithValueLookup:(FLEnumSetEnumValueLookup*)  FLCodeTypeIDEnumFromString stringLookup:(FLEnumSetEnumStringLookup*) FLCodeTypeIDStringFromEnum]);
}
+ (id) enumSet:(NSString*) concatenatedEnumString {
    FLCodeTypeIDEnumSet* outObject = FLAutorelease([[[self class] alloc] initWithValueLookup:(FLEnumSetEnumValueLookup*)  FLCodeTypeIDEnumFromString stringLookup:(FLEnumSetEnumStringLookup*) FLCodeTypeIDStringFromEnum]);
    [outObject setConcatenatedString:concatenatedEnumString];
    return outObject;
}
@end
