// 
// ZFSearchSetByCategory.m
// 
// DO NOT MODIFY!! Modifications will be overwritten.
// Generated by: Mike Fullerton @ 6/3/13 10:43 AM with PackMule (3.0.1.100)
// 
// Project: Zenfolio Web API
// Schema: ZenfolioWebApi
// 
// Copyright 2013 (c) GreenTongue Software LLC, Mike Fullerton
// The FishLamp Framework is released under the MIT License: http://fishlamp.com/license
// 


#import "ZFSearchSetByCategory.h"
#import "FLModelObject.h"
#import "ZFPhotoSetType.h"
#import "ZFSortOrder.h"

@implementation ZFSearchSetByCategory

@synthesize categoryCode = _categoryCode;
#if FL_MRC
- (void) dealloc {
    [_type release];
    [_searchId release];
    [_sortOrder release];
    [super dealloc];
}
#endif
@synthesize limit = _limit;
@synthesize offset = _offset;
@synthesize searchId = _searchId;
+ (ZFSearchSetByCategory*) searchSetByCategory {
    return FLAutorelease([[[self class] alloc] init]);
}
@synthesize sortOrder = _sortOrder;
- (ZFSortOrder) sortOrderEnum {
    return ZFSortOrderEnumFromString(self.sortOrder);
}
- (void) setSortOrderEnum:(ZFSortOrder) value {
    self.sortOrder = ZFSortOrderStringFromEnum(value);
}
- (ZFSortOrderEnumSet*) sortOrderEnumSet {
    return ZFSortOrderEnumFromString(self.sortOrder);
}
- (void) setSortOrderEnumSet:(ZFSortOrderEnumSet*) value {
    self.sortOrder = value.concatenatedString;
}
@synthesize type = _type;
- (ZFPhotoSetType) typeEnum {
    return ZFPhotoSetTypeEnumFromString(self.type);
}
- (void) setTypeEnum:(ZFPhotoSetType) value {
    self.type = ZFPhotoSetTypeStringFromEnum(value);
}
- (ZFPhotoSetTypeEnumSet*) typeEnumSet {
    return ZFPhotoSetTypeEnumFromString(self.type);
}
- (void) setTypeEnumSet:(ZFPhotoSetTypeEnumSet*) value {
    self.type = value.concatenatedString;
}

@end
