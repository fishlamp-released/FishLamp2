// 
// ZFPhotoFlags.m
// 
// DO NOT MODIFY!! Modifications will be overwritten.
// Generated by: Mike Fullerton @ 6/3/13 10:43 AM with PackMule (3.0.1.100)
// 
// Project: Zenfolio Web API
// Schema: ZenfolioWebApi
// 
// Copyright 2013 (c) GreenTongue Software LLC, Mike Fullerton
// The FishLamp Framework is released under the MIT License: http://fishlamp.com/license
// 

#import "ZFPhotoFlags.h"

NSString* ZFPhotoFlagsStringFromEnum(ZFPhotoFlags theEnum) {
    switch(theEnum) {
        case ZFPhotoFlagsHasExif:{
            return kZFPhotoFlagsHasExif;
        }
        break;
        case ZFPhotoFlagsHasCategories:{
            return kZFPhotoFlagsHasCategories;
        }
        break;
        case ZFPhotoFlagsHasTitle:{
            return kZFPhotoFlagsHasTitle;
        }
        break;
        case ZFPhotoFlagsHasCaption:{
            return kZFPhotoFlagsHasCaption;
        }
        break;
        case ZFPhotoFlagsNone:{
            return kZFPhotoFlagsNone;
        }
        break;
        case ZFPhotoFlagsHasComments:{
            return kZFPhotoFlagsHasComments;
        }
        break;
        case ZFPhotoFlagsHasKeywords:{
            return kZFPhotoFlagsHasKeywords;
        }
        break;
    }
    return nil;
}

ZFPhotoFlags ZFPhotoFlagsEnumFromString(NSString* theString) {
    static NSDictionary* s_enumLookup = nil;
    static dispatch_once_t s_lookupPredicate = 0;
    dispatch_once(&s_lookupPredicate, ^{
        s_enumLookup = [[NSDictionary alloc] initWithObjectsAndKeys:
            [NSNumber numberWithInteger:ZFPhotoFlagsHasExif], [kZFPhotoFlagsHasExif lowercaseString],
            [NSNumber numberWithInteger:ZFPhotoFlagsHasCategories], [kZFPhotoFlagsHasCategories lowercaseString],
            [NSNumber numberWithInteger:ZFPhotoFlagsHasTitle], [kZFPhotoFlagsHasTitle lowercaseString],
            [NSNumber numberWithInteger:ZFPhotoFlagsHasCaption], [kZFPhotoFlagsHasCaption lowercaseString],
            [NSNumber numberWithInteger:ZFPhotoFlagsNone], [kZFPhotoFlagsNone lowercaseString],
            [NSNumber numberWithInteger:ZFPhotoFlagsHasComments], [kZFPhotoFlagsHasComments lowercaseString],
            [NSNumber numberWithInteger:ZFPhotoFlagsHasKeywords], [kZFPhotoFlagsHasKeywords lowercaseString],
            nil ];
    });
    NSNumber* value = [s_enumLookup objectForKey:[theString lowercaseString]];
    return value == nil ? NSNotFound : [value integerValue];
}

@implementation ZFPhotoFlagsEnumSet
+ (id) enumSet{
    return FLAutorelease([[[self class] alloc] initWithValueLookup:(FLEnumSetEnumValueLookup*)  ZFPhotoFlagsEnumFromString stringLookup:(FLEnumSetEnumStringLookup*) ZFPhotoFlagsStringFromEnum]);
}
+ (id) enumSet:(NSString*) concatenatedEnumString {
    ZFPhotoFlagsEnumSet* outObject = FLAutorelease([[[self class] alloc] initWithValueLookup:(FLEnumSetEnumValueLookup*)  ZFPhotoFlagsEnumFromString stringLookup:(FLEnumSetEnumStringLookup*) ZFPhotoFlagsStringFromEnum]);
    [outObject setConcatenatedString:concatenatedEnumString];
    return outObject;
}
@end
